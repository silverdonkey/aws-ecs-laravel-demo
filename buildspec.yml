version: 0.2
run-as: root
phases:
  install:
    commands:
      - echo "Authenticate against ECR"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  pre_build:
    commands:
      - echo "Docker pull PROD-IMAGE container from ECR"
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/$ENVIRONMENT-base-image:latest
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/$ENVIRONMENT-base-image:latest aws-ecs-laravel-demo/app:latest
      - echo "Docker pull TEST-NODE container from ECR"
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/test-node-image:latest
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/test-node-image:latest aws-ecs-laravel-demo/node:latest
      - echo "Docker pull REDIS container from ECR"
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/redis:alpine
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/redis:alpine redis:alpine
      - echo "Docker pull MYSQL container from ECR"
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/mysql:5.7
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myshippingdocker/mysql:5.7 mysql:5.7
      - echo "Copy env props for CI"
      - cp .env.ci .env
      - ./ctl up -d && sleep 10
      - ./ctl composer install --no-interaction --prefer-dist --optimize-autoloader
      - ./ctl art key:generate --no-ansi
      - ./ctl npm install
      - ./ctl npm run dev
      - ./ctl test --testsuite=Unit
  build:
    commands:
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - ./docker/build
  deploy:
    commands:
      - echo "Deploy PROD"
     # - ./docker/deploy
